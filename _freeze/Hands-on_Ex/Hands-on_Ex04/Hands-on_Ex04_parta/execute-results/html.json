{
  "hash": "c864a643ebb81e88ae4aa7d4a648bd5b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 4: Part A\"\nauthor: \"Sarthak Nagapurkar\"\ndate: \"May 03, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## 4.1 Learning Outcome\n\nIn this hands-on exercise, we will gain hands-on experience on using:\n\n-   ggstatsplot package to create visual graphics with rich statistical information,\n-   performance package to visualise model diagnostics, and\n-   parameters package to visualise model parameters\n\n## 4.2 Visual Statistical Analysis with ggstatsplot\n\n[ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/)  is an extension of [ggplot2](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n## 4.3 Getting Started\n\n### 4.3.1 Installing and launching R packages\n\nIn this exercise, ggstatsplot and tidyverse will be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, tidyverse)\n```\n:::\n\n\n### 4.3.2 Importing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n### 4.3.3 One-sample test: *gghistostats()* method\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English Scores\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### 4.3.4 Unpacking the Bayes Factor\n\n-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n-   That’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\n-   When we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n-   The [Schwarz criterion](https://www.statisticshowto.com/bayesian-information-criterion/) is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n### 4.3.5 How to interpret Bayes Factor\n\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by [Lee and Wagenmakers](https://www-tandfonline-com.libproxy.smu.edu.sg/doi/pdf/10.1080/00031305.1999.10474443?needAccess=true) in 2013:\n\n### 4.3.6 Two-sample mean test: *ggbetweenstats()*\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n### 4.3.7 Oneway ANOVA Test: *ggbetweenstats()* method\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for One-way ANOVA test on English score by race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = RACE,\n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n-   “ns” → only non-significant\n-   “s” → only significant\n-   “all” → everything\n\n### 4.3.8 Significant Test of Correlation: *ggscatterstats()*\n\nIn the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### 4.3.9 Significant Test of Association (Depedence) : *ggbarstats()* methods\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using [*cut()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam1 <- exam %>%\n  mutate(MATHS_bins = \n           cut(MATHS,\n               breaks= c(0,60,75,85,100)))\n```\n:::\n\n\nIn this code chunk below [*ggbarstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html) is used to build a visual for Significant Test of Association\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarstats(exam1,\n           x = MATHS_bins,\n           y = GENDER)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## 4.4 Visualising Models\n\nIn this section, you will learn how to visualise model diagnostic and model parameters by using parameters package.\n\n-   Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n## 4.5 Getting Started\n\n## 4.6 Installing and loading the required libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readxl, performance, parameters, see)\n```\n:::\n\n\n### 4.6.1 Importing Excel file: readxl methods\n\nIn the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [readxl](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n```\n\n\n:::\n:::\n\n\n### 4.6.2 Multiple Regression Model using lm()\n\nThe code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n```\n\n\n:::\n:::\n\n\n### 4.6.3 Model Diagnostic: checking for multicolinearity:\n\nIn the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [performance](https://easystats.github.io/performance/) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### 4.6.4 Model Diagnostic: checking normality assumption\n\nIn the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [performance](https://easystats.github.io/performance/) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_n <- check_normality(model1)\nplot(check_n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### 4.6.5 Model Diagnostic: Check model for homogeneity of variances\n\nIn the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [performance](https://easystats.github.io/performance/) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### 4.6.6 Model Diagnostic: Complete check\n\nWe can also perform the complete by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### 4.6.7 Visualising Regression Parameters: see methods\n\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### 4.6.8 Visualising Regression Parameters: *ggcoefstats()* methods\n\nIn the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of ggstatsplot package to visualise the parameters of a regression model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_parta_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex04_parta_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}