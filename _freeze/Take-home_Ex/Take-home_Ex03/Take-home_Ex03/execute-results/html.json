{
  "hash": "aade09a86f3a717036af66af65241403",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3\"\nauthor: \"Sarthak Nagapurkar\"\ndate: \"May 22, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## Project: VAST Challenge 2024 - Mini-Challenge 2\n\nSee link below for additional details on this challenge!\n\n[https://vast-challenge.github.io/2024/index.html](https://vast-challenge.github.io/2024/)\n\n## Project Overview\n\nIn Oceanus, the routine life of islanders is defined by the movements of commercial fishing vessels, which usually indicate a healthy economy. However, this routine was disrupted when SouthSeafood Express Corp was caught fishing illegally, causing a significant scandal in the fishing community. FishEye International, a non-profit dedicated to combating illegal fishing, is collecting and analyzing data on ship movements and shipping records to understand this disruption better. They have compiled this data into CatchNet: the Oceanus Knowledge Graph. FishEye’s analysts need assistance in creating analytical capabilities to make sense of this data and better understand local commercial fishing behavior.\n\n## Project Objectives\n\nThis study aims to use visual analytics to understand patterns of groups in the knowledge graph. This will endeavour to:\n\n-   FishEye analysts have long wanted to better understand the flow of commercially caught fish through Oceanus’s many ports. But as they were loading data into CatchNet, they discovered they had purchased the wrong port records. They wanted to get the ship off-load records, but they instead got the port-exit records (essentially trucks/trains leaving the port area). Port exit records do not include which vessel that delivered the products. Given this limitation, develop a visualization system to associate vessels with their probable cargos. Which vessels deliver which products and when? What are the seasonal trends and anomalies in the port exit records?\n-   Develop visualizations that illustrate the inappropriate behavior of SouthSeafood Express Corp vessels. How do their movement and catch contents compare to other fishing vessels? When and where did SouthSeafood Express Corp vessels perform their illegal fishing? How many different types of suspicious behaviors are observed? Use visual evidence to justify your conclusions.\n-   To support further Fisheye investigations, develop visual analytics workflows that allow you to discover other vessels engaging in behaviors similar to SouthSeafood Express Corp’s illegal activities? Provide visual evidence of the similarities.\n-   How did fishing activity change after SouthSeafood Express Corp was caught? What new behaviors in the Oceanus commercial fishing community are most suspicious and why?\n\n## Installing Packages\n\nLet's install the required packages for addressing the challenges.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npacman::p_load(jsonlite, tidygraph, ggraph, igraph,\n               visNetwork, graphlayouts, tidyverse, sf, leaflet, plotly, gganimate,\n               gifski)\n```\n:::\n\n\n## Importing the data\n\nLet's import the data given for the challenges\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_data <- fromJSON(\"data/MC2.json\")\ngeog <- st_read(\"data/Oceanus Geography.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sarthakjn1\\ISSS608-VAA\\Take-home_Ex\\Take-home_Ex03\\data\\Oceanus Geography.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 29 features and 7 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n### Data Preparation\n\nFirst we have the data from the Transponder pings. Let us isolate out that data so that we can use it in the future as and when required.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2_ping <-\n  as_tibble(mc2_data$links) %>%\n  distinct() %>%\n  mutate(source =\n           as.character(source),\n         target=\n           as.character(target),\n         type = as.character(type),\n         time = as.character(time),\n         arrivaldate = as.character(as.Date(time, format = \"%Y-%m-%dT%H:%M:%S\"))\n  ) %>%\n  filter((source != target) & type == 'Event.TransportEvent.TransponderPing') %>%\n  select(source, target, type, time, dwell, arrivaldate)\n```\n:::\n\n\n## Investigating SouthSeaFoodCorp Vessels\n\nNext, let us prepare the data for visualizing the pings of SouthSeaFood Corp Vessels. They are snappersnatcher7be and roachrobberdb6. Here we should be able to identify some suspicious behaviour.\n\n::: panel-tabset\n## Snappersnatcher7be\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2ping_nodes <- mc2_data$nodes\nmc2ping_nodes <- mc2ping_nodes %>% filter(type == 'Entity.Location.Region' | type =='Entity.Location.City' | type == 'Entity.Location.Point' | id == 'snappersnatcher7be' | id == 'roachrobberdb6') %>% rename(Location = id) \nmc2ping_nodes <- mc2ping_nodes %>% mutate(id = seq_len(nrow(mc2ping_nodes)))\n\nmc2ping_edges <- mc2_ping %>%\n  group_by(source, target) %>%\n    summarise(weight = n()) %>%\n  filter(source!=target) %>%\n  filter(target == \"snappersnatcher7be\") %>%\n  filter(weight > 1) %>%\n  ungroup()\n\nmc2ping_edges_agg <- mc2ping_edges %>%\n  left_join(mc2ping_nodes, by= c(\"source\" = \"Location\")) %>%\n  rename(from = id) %>%\n  left_join(mc2ping_nodes, by= c(\"target\" = \"Location\")) %>%\n  rename(to = id)\nsnappergraph <- tbl_graph(nodes = mc2ping_nodes,\n                           edges = mc2ping_edges_agg,\n                           directed = TRUE)\n\nsnappergraph <- snappergraph %>% \n  activate(nodes) %>% \n  filter(!node_is_isolated())\ng <- snappergraph %>% \n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(width=weight), \n                 alpha=0.8) +\n   scale_edge_width(range = c(0.1,5)) +\n  geom_node_point(aes(colour = Location, size = 5)) +\n  geom_node_text(aes(label = Location), vjust = 1.5)\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-4-1.png){width=1152}\n:::\n:::\n\n\n## Roachrobberdb6\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2ping_roach_edges <- mc2_ping %>%\n  group_by(source, target) %>%\n    summarise(weight = n()) %>%\n  filter(source!=target) %>%\n  filter(target == \"roachrobberdb6\") %>%\n  filter(weight > 1) %>%\n  ungroup()\n\nmc2ping_roach_edges_agg <- mc2ping_roach_edges %>%\n  left_join(mc2ping_nodes, by= c(\"source\" = \"Location\")) %>%\n  rename(from = id) %>%\n  left_join(mc2ping_nodes, by= c(\"target\" = \"Location\")) %>%\n  rename(to = id)\n\nroachrobbergraph <- tbl_graph(nodes = mc2ping_nodes,\n                           edges = mc2ping_roach_edges_agg,\n                           directed = TRUE)\nroachrobbergraph <- roachrobbergraph %>% \n  activate(nodes) %>% \n  filter(!node_is_isolated())\ng <- roachrobbergraph %>% \n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(width=weight), \n                 alpha=0.8) +\n   scale_edge_width(range = c(0.1,5)) +\n  geom_node_point(aes(colour = Location, size = 5)) +\n  geom_node_text(aes(label = Location), vjust = 1.5)\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n:::\n\n### Prepare data for plotting paths of vessels\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentroids <- st_centroid(geog)\ngeog$centroid_x <- st_coordinates(centroids)[, 1]\ngeog$centroid_y <- st_coordinates(centroids)[, 2]\nmc2_vessel_mov <- mc2_ping %>%\n  left_join(geog,\n            by = c(\"source\" = \"Name\"))\nvessel_movement_sf <- mc2_vessel_mov %>%\n  filter(!is.na(centroid_x) & !is.na(centroid_y)) %>%\n  st_as_sf(coords = c(\"centroid_x\", \"centroid_y\"), crs = 4326)\n\nvessel_movement_sf <- vessel_movement_sf %>%\n  arrange(target, time)\n```\n:::\n\n\n### Investigating paths of SouthSeaFoodCorp Vessels\n\n::: panel-tabset\n## Snappersnatcher7be\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ngeog2 <- st_read(\"data/Oceanus Geography.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sarthakjn1\\ISSS608-VAA\\Take-home_Ex\\Take-home_Ex03\\data\\Oceanus Geography.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 29 features and 7 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ngeog2 <- st_centroid(geog2)\n\nvessel_trajectory <- vessel_movement_sf %>%\n  group_by(target) %>%\n  summarize(do_union = FALSE) %>%\n  st_cast(\"LINESTRING\")\nvessel_trajectory_selected <- vessel_trajectory %>%\n  filter(target == \"snappersnatcher7be\")\n\n\nggplot(data = geog2) +\n  geom_sf(data = geog2) +\n  geom_sf(data = vessel_trajectory_selected, \n          aes(color = factor(target)), \n          size = 1) +\n   geom_sf_text(aes(label = Name, geometry = geometry), size = 3, color = \"black\") +\n  theme_minimal() +\n  labs(title = \"Trajectories of snappersnacther7be\", \n  x = \"Longitude\", y = \"Latitude\", color = \"ID\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n\n## Roachrobberdb6\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nvessel_trajectory_selected <- vessel_trajectory %>%\n  filter(target == \"roachrobberdb6\")\n\n\np <- ggplot(data = geog2) +\n  geom_sf(aes(geometry = geometry)) +\n  geom_sf_text(aes(label = Name, geometry = geometry), size = 3, color = \"black\") +\n  geom_sf(data = vessel_trajectory_selected, \n          aes(color = factor(target)), \n          size = 1) +\n  theme_minimal() +\n  labs(title = \"Trajectories of roachrobberdb6\", \n  x = \"Longitude\", y = \"Latitude\", color = \"ID\")\np\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-8-1.png){width=1152}\n:::\n:::\n\n:::\n\n### Investigating the illegal activities and the time when they were caught.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  mutate(name = as.character(name),\n         id = as.character(id),\n         type = as.character(type),\n         date = as.character(as.Date(date)),\n         qty = as.character(as.double(qty_tons),\n         company = as.character(company)\n                            )) %>%\n  select(id, name, type, date, qty, company)\n\nmc2_transaction <-\n  as_tibble(mc2_data$links) %>%\n  distinct() %>%\n  mutate(source =\n           as.character(source),\n         target=\n           as.character(target),\n         type = as.character(type),\n         date = as.character(date)\n  ) %>%\n  group_by(source, target, type) %>%\n  filter((source != target) & type == 'Event.Transaction') %>%\n  select(source, target, type, date)\nmc2_deliveryreport <- mc2_nodes %>% filter(type == 'Entity.Document.DeliveryReport')\nmc2_fish <- mc2_nodes %>% filter(type == 'Entity.Commodity.Fish')\nmc2_loc <- mc2_nodes %>% filter(type == 'Entity.Location.City')\nmc2_transaction_loc <- inner_join(mc2_loc, mc2_transaction, by = c(\"id\" = \"target\"))\nmc2_transaction_fish <- inner_join(mc2_fish, mc2_transaction, by = c(\"id\" = \"target\"))\nmc2_transaction_loc <- inner_join(mc2_transaction_fish, mc2_transaction_loc, by = c(\"source\" = \"source\"))\nmc2_transaction_loc <- inner_join(mc2_transaction_loc, mc2_deliveryreport, by = c(\"source\" = \"id\"))\nmc2_transaction_loc <- mc2_transaction_loc %>%\n  mutate(suspect_arrival = as.character(as.Date(date,format = \"%Y-%m-%d\") - 1),\n         suspect_arrival2 = as.character(as.Date(date,format = \"%Y-%m-%d\")),\n         month = month(date))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2_vessels <- mc2_nodes %>% filter(type == 'Entity.Vessel.CargoVessel' |\n                                           type == 'Entity.Vessel.Ferry.Cargo' |\n                                      type == 'Entity.Vessel.FishingVessel' |\n                                      type == 'Entity.Vessel.Research' |\n                                      type == 'Entity.Vessel.Tour' |\n                                      type == 'Entity.Vessel.Other')\nmc2_vessels_ping <- mc2_vessels %>%\n  inner_join(mc2_ping, by = c(\"id\" = \"target\"))\nmc2_vessels_ping <- mc2_vessels_ping %>%\n  mutate(month = month(arrivaldate))\nmc2_southsea_pings <- mc2_vessels_ping %>% filter(company == 'SouthSeafood Express Corp')\n\nmc2_southsea_calls <- mc2_southsea_pings %>%\n  group_by(id, month) %>%\n  summarise(totalcalls = n()) %>%\n  select(id, month, totalcalls)\n\nggplot(data = mc2_southsea_calls,\n       aes(x = month, y = totalcalls, fill = id)) +\n  geom_bar(stat = \"identity\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Investigating region-wise calls for SouthSeaFood Corp Vessels\n\nPrepare the data for region-wise calls for SouthSeaFood Corp Vessels.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2_southsea <- inner_join(mc2_southsea_pings, geog,\n                           by = c(\"source\" = \"Name\"))\nmc2_southsea_illegalact <- mc2_southsea %>% filter((X.Kind != 'city') &\n                                          (X.Kind != 'Fishing Ground') )\nmc2_southsea_susp_calls <- mc2_southsea %>%\n  group_by(id, month, source) %>%\n  summarise(totalcalls = n()) %>%\n  select(id, month, source, totalcalls)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(data = mc2_southsea_susp_calls,\n       aes(x = month, y = totalcalls, fill = id)) +\n  facet_wrap(~ source) + \n  geom_bar(stat = \"identity\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-12-1.png){width=1152}\n:::\n:::\n\n\n## Investigating Fishing Vessels at Nemo Reef and Ghoti Preserve\n\nFrom this initial analysis of Snappersnatcher7be, we find that it is pinging Ghoti Preserve and spending a considerable amount of time there. This is suspicious because Ghoti Preserve is an ecological preserve and fishing here is illegal.\n\nFollowing a similar line of thought, let us identify the fishing vessels that spent a considerable amount of time at ecological preserves indicating that they might be possibly engaged in illegal fishing.\n\n::: panel-tabset\n## Nemo Reef\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2ping_nemo_nodes <- mc2_data$nodes %>% filter(id == 'Nemo Reef' | type == 'Entity.Vessel.FishingVessel') %>% rename(Location = id)\nmc2ping_nemo_nodes <- mc2ping_nemo_nodes %>% mutate(id = seq_len(nrow(mc2ping_nemo_nodes))) \n\nmc2ping_nemo_edges <- mc2_ping %>%\n  group_by(source, target) %>%\n    summarise(weight = max(dwell)) %>%\n  filter(source!=target) %>%\n  filter(source == \"Nemo Reef\") %>%\n  filter(weight > 200000) %>%\n  ungroup()\n\nmc2ping_nemo_edges_agg <- mc2ping_nemo_edges %>%\n  inner_join(mc2ping_nemo_nodes, by= c(\"source\" = \"Location\")) %>%\n  rename(from = id) %>%\n  inner_join(mc2ping_nemo_nodes, by= c(\"target\" = \"Location\")) %>%\n  rename(to = id)\n\nnemograph <- tbl_graph(nodes = mc2ping_nemo_nodes,\n                           edges = mc2ping_nemo_edges_agg,\n                           directed = TRUE)\nnemograph <- nemograph %>% \n  activate(nodes) %>% \n  filter(!node_is_isolated())\ng <- nemograph %>% \n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(width=weight), \n                 alpha=0.8) +\n   scale_edge_width(range = c(0.1,5)) +\n  geom_node_point(aes(colour = company, size = 5)) +\n  geom_node_text(aes(label = Location), vjust = 2)\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-13-1.png){width=1152}\n:::\n:::\n\n\n## Ghoti Preserve\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2ping_ghoti <- mc2_data$nodes %>% filter(id == 'Ghoti Preserve' | type == 'Entity.Vessel.FishingVessel') %>% rename(Location = id)\nmc2ping_ghoti_nodes <- mc2ping_ghoti %>% mutate(id = seq_len(nrow(mc2ping_ghoti))) \n\nmc2ping_edges <- mc2_ping %>%\n  group_by(source, target) %>%\n    summarise(weight = max(dwell)) %>%\n  filter(source!=target) %>%\n  filter(source == \"Ghoti Preserve\") %>%\n  filter(weight > 200000) %>%\n  ungroup()\n\nmc2ping_ghoti_edges_agg <- mc2ping_edges %>%\n  inner_join(mc2ping_ghoti_nodes, by= c(\"source\" = \"Location\")) %>%\n  rename(from = id) %>%\n  inner_join(mc2ping_ghoti_nodes, by= c(\"target\" = \"Location\")) %>%\n  rename(to = id)\n\nghotigraph <- tbl_graph(nodes = mc2ping_ghoti_nodes,\n                           edges = mc2ping_ghoti_edges_agg,\n                           directed = TRUE)\nghotigraph <- ghotigraph %>% \n  activate(nodes) %>% \n  filter(!node_is_isolated())\ng <- ghotigraph %>% \n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(width=weight), \n                 alpha=0.8) +\n   scale_edge_width(range = c(0.1,5)) +\n  geom_node_point(aes(colour = company, size = 5)) +\n  geom_node_text(aes(label = Location), vjust = 1.5)\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-14-1.png){width=1152}\n:::\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  mutate(name = as.character(name),\n         id = as.character(id),\n         type = as.character(type),\n         date = as.character(as.Date(date)),\n         qty = as.character(as.double(qty_tons),\n         company = as.character(company)\n                            )) %>%\n  select(id, name, type, date, qty, company)\n\nmc2_transaction <-\n  as_tibble(mc2_data$links) %>%\n  distinct() %>%\n  mutate(source =\n           as.character(source),\n         target=\n           as.character(target),\n         type = as.character(type),\n         date = as.character(date)\n  ) %>%\n  group_by(source, target, type) %>%\n  filter((source != target) & type == 'Event.Transaction') %>%\n  select(source, target, type, date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_deliveryreport <- mc2_nodes %>% filter(type == 'Entity.Document.DeliveryReport')\nmc2_fish <- mc2_nodes %>% filter(type == 'Entity.Commodity.Fish')\nmc2_loc <- mc2_nodes %>% filter(type == 'Entity.Location.City')\nmc2_transaction_loc <- inner_join(mc2_loc, mc2_transaction, by = c(\"id\" = \"target\"))\nmc2_transaction_fish <- inner_join(mc2_fish, mc2_transaction, by = c(\"id\" = \"target\"))\nmc2_transaction_loc <- inner_join(mc2_transaction_fish, mc2_transaction_loc, by = c(\"source\" = \"source\"))\nmc2_transaction_loc <- inner_join(mc2_transaction_loc, mc2_deliveryreport, by = c(\"source\" = \"id\"))\nmc2_transaction_loc <- mc2_transaction_loc %>%\n  mutate(suspect_arrival = as.character(as.Date(date,format = \"%Y-%m-%d\") - 1),\n         suspect_arrival2 = as.character(as.Date(date,format = \"%Y-%m-%d\")),\n         month = month(date))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_portoffloadtotal <- mc2_transaction_loc %>%\n  group_by(month, id.y) %>%\n  summarize(totalqty = sum(as.double(qty)),\n            totalcalls = n()) %>%\n  select(id.y, month, totalqty, totalcalls)\n\nmc2_portoffload <- mc2_transaction_loc %>%\n  group_by(month, id.y, name.x) %>%\n  summarize(totalqty = sum(as.double(qty)),\n            totalcalls = n()) %>%\n  select(id.y, name.x, month, totalqty, totalcalls)\n```\n:::\n\n\n### Histogram of Cargo Offload Transactions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_transaction_loc <- mc2_transaction_loc %>% mutate(qty = as.double(qty))\n# Calculate median\nmedian_value <- median(mc2_transaction_loc$qty)\n\n# Calculate Q3 and IQR\nQ3 <- quantile(mc2_transaction_loc$qty, 0.75)\nIQR <- IQR(mc2_transaction_loc$qty)\nupper_whisker <- Q3 + 1.5 * IQR\nggplot(mc2_transaction_loc, aes(x = as.double(qty))) +\n  geom_histogram(binwidth = 5, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  geom_vline(aes(xintercept = median_value), linetype = \"dotted\", color = \"red\", size = 1) +\n  geom_vline(aes(xintercept = upper_whisker), linetype = \"dotted\", color = \"red\", size = 1) +\n  labs(title = \"Histogram of Cargo offload transactions\", x = \"Quantity\", y = \"Frequency\") +\n  annotate(\"text\", x = median_value, y = Inf, label = paste(\"Median:\", round(median_value, 2)), vjust = 1, color = \"red\") +\n  annotate(\"text\", x = upper_whisker, y = Inf, label = paste(\"Upper Whisker:\", round(upper_whisker, 2)), vjust = 1, color = \"red\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Plotting the Cargo offload for various ports by time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mc2_portoffloadtotal,\n       aes(x = month, y = totalqty)) +\n  facet_wrap(~id.y) +\n  geom_bar(stat = \"identity\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n### Diving deep into Cargo offload as per Fish species\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mc2_portoffload,\n       aes(x = month, y = totalqty, fill = name.x)) +\n  facet_wrap(~id.y) +\n  geom_bar(stat=\"identity\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_cargovessels <- mc2_data$nodes %>% filter(type == \"Entity.Vessel.CargoVessel\" | type == \"Entity.Vessel.Ferry.Cargo\")\nmc2_cargoping <- inner_join(mc2_ping, mc2_cargovessels)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_ping_transaction_loc <- right_join(mc2_cargoping, mc2_transaction_loc, by = c(\"source\" = \"id.y\", \"arrivaldate\" = \"suspect_arrival\"))\nmc2_ping_transaction_loc <- mc2_ping_transaction_loc %>% filter(dwell != 0.000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#mc2_ping_transaction_loc2 <- right_join(mc2_cargoping, mc2_transaction_loc, by = c(\"source\" = \"id.y\", \"arrivaldate\" = \"suspect_arrival2\"))\n#mc2_ping_transaction_loc2 <- mc2_ping_transaction_loc2 %>% filter(dwell != 0.000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#finaljoin <- rbind(mc2_ping_transaction_loc, mc2_ping_transaction_loc2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#write.csv(mc2_cargoping, 'ping.csv')\n#write.csv(finaljoin, 'transactionping.csv')\n```\n:::\n\n\n### Investigating the illegal activities and the time when they were caught.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2_vessels <- mc2_nodes %>% filter(type == 'Entity.Vessel.CargoVessel' |\n                                           type == 'Entity.Vessel.Ferry.Cargo' |\n                                      type == 'Entity.Vessel.FishingVessel' |\n                                      type == 'Entity.Vessel.Research' |\n                                      type == 'Entity.Vessel.Tour' |\n                                      type == 'Entity.Vessel.Other')\nmc2_vessels_ping <- mc2_vessels %>%\n  inner_join(mc2_ping, by = c(\"id\" = \"target\"))\nmc2_vessels_ping <- mc2_vessels_ping %>%\n  mutate(month = month(arrivaldate))\nmc2_southsea_pings <- mc2_vessels_ping %>% filter(company == 'SouthSeafood Express Corp')\n\nmc2_southsea_calls <- mc2_southsea_pings %>%\n  group_by(id, month) %>%\n  summarise(totalcalls = n()) %>%\n  select(id, month, totalcalls)\n\nggplot(data = mc2_southsea_calls,\n       aes(x = month, y = totalcalls, fill = id)) +\n  geom_bar(stat = \"identity\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n### Investigating region-wise calls for SouthSeaFood Corp Vessels\n\nPrepare the data for region-wise calls for SouthSeaFood Corp Vessels.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc2_southsea <- inner_join(mc2_southsea_pings, geog,\n                           by = c(\"source\" = \"Name\"))\nmc2_southsea_illegalact <- mc2_southsea %>% filter((X.Kind != 'city') &\n                                          (X.Kind != 'Fishing Ground') )\nmc2_southsea_susp_calls <- mc2_southsea %>%\n  group_by(id, month, source) %>%\n  summarise(totalcalls = n()) %>%\n  select(id, month, source, totalcalls)\n```\n:::\n",
    "supporting": [
      "Take-home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}