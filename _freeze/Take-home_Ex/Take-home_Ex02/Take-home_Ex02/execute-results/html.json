{
  "hash": "d2f0dcfb0d61845c07a6cb45a3c05b06",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nauthor: \"Sarthak Nagapurkar\"\ndate: \"May 04, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## 1. Overview\n\nThis exercise aims to provide critique and improvements to visualizations created by peer in Take-home Exercise 1 using R. This will be done based on clarity and aesthetics. The original design will then be remade using data visualization design principles and best practices using `ggplot2`, its extensions, and `tidyverse` packages.\n\nThe original dataset consisted of transaction data of [REALIS](https://www.ura.gov.sg/reis/index). A complete set of the private residential property transaction data of Singapore from 1st January 2023 to 31st March 2024 was used.\n\n## 2. Data Visualization Critique\n\n### 2.1 Data Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, ggthemes, ggridges, hrbrthemes, colorspace,ggdist, tidyr, tidyverse, htmltools, viridis)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_data_2023Q1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_data_2023Q1 <- mutate(realis_data_2023Q1, Quarter='2023-Q1')\nrealis_data_2023Q2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_data_2023Q2 <- mutate(realis_data_2023Q2, Quarter='2023-Q2')\nrealis_data_2023Q3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_data_2023Q3 <- mutate(realis_data_2023Q3, Quarter='2023-Q3')\nrealis_data_2023Q4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_data_2023Q4 <- mutate(realis_data_2023Q4, Quarter='2023-Q4')\nrealis_data_2024Q1 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\nrealis_data_2024Q1 <- mutate(realis_data_2024Q1, Quarter='2024-Q1')\ndf <- rbind(realis_data_2023Q1, realis_data_2023Q2, realis_data_2023Q3, realis_data_2023Q4, realis_data_2024Q1)\n\ndf <- df %>%\n  mutate_if(is.character, as.factor)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$`Sale Date` = as.Date(df$`Sale Date`, format = \"%d %b %Y\")\n```\n:::\n\n\n### 2.2 Original Design\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Number of Units` > 1) %>%\n  arrange(desc(`Number of Units`)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   <fct>                                <dbl>         <dbl>                <dbl>\n 1 MEYER PARK                       392180000       144883.                 2707\n 2 BAGNALL COURT                    115280000        68491.                 1683\n 3 KEW LODGE                         66800000        25177                  2653\n 4 KARTAR APARTMENTS                 18000000         6964.                 2585\n 5 MONDO MANSION BUIL…                6280000         5490.                 1144\n 6 N.A.                              10600000         6747.                 1571\n 7 N.A.                              61080008        32149.                 1900\n 8 N.A.                              32200000        14123.                 2280\n 9 N.A.                               6150000         4342.                 1416\n10 EAST VIEW GARDEN                   6100000         8338.                  732\n11 N.A.                               8000000         3659.                 2187\n12 CLAYMORE PLAZA                     7000000         4209.                 1663\n# ℹ 18 more variables: `Sale Date` <date>, Address <fct>, `Type of Sale` <fct>,\n#   `Type of Area` <fct>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <fct>, `Property Type` <fct>, `Number of Units` <dbl>,\n#   Tenure <fct>, `Completion Date` <fct>, `Purchaser Address Indicator` <fct>,\n#   `Postal Code` <fct>, `Postal District` <fct>, `Postal Sector` <fct>,\n#   `Planning Region` <fct>, `Planning Area` <fct>, Quarter <fct>\n```\n\n\n:::\n\n```{.r .cell-code}\ndf.c <- df %>%\n  filter(!grepl('ENBLOC', df$Address))\ndf.c <- df.c %>%\n  filter(`Number of Units` <= 1)\ndf.c_median <- df.c %>%\n  select(`Transacted Price ($)`, `Type of Area`, `Property Type`) %>%\n  group_by(`Property Type`, `Type of Area`) %>%\n  summarise(`Median Transaction Price ($)` = median(`Transacted Price ($)`, .groups = 'drop'))\n  ggplot(df.c_median, aes(x = `Property Type`, \n             y = `Median Transaction Price ($)`, \n             color = `Type of Area`)) +  # Adding color aesthetic based on Type of Area\n  geom_point() +\n  theme_economist() +\n  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust=1)) +\n  scale_y_continuous(labels = scales::comma) +\n  labs(color = \"Type of Area\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=576}\n:::\n:::\n\n\n**The link for the peers work:** <https://va24-ry.netlify.app/take-home%20exercise/take-home_ex01/take-home_ex01#identifying-the-sub-markets>\n\n### 2.3 Critique: Clarity and Aesthetics\n\n#### **2.2.1 Clarity**\n\n-   Lack of a title makes it difficult to understand what the plot is about.\n-   Dot plot is being used to represent discrete data. The differences between prices are a bit difficult to understand as dot plots are not a very good way to represent discrete data.\n-   As a person who wants to understand more from the data, he will be interested in knowing the distribution of data along with the median prices as well. Just the median prices would be insufficient to derive a conclusion about the larger dataset without knowing the distribution of data.\n-   Lack of subtitle makes it difficult for the person viewing the visualization to understand the message the analyst wants to convey through the visualization. In turn, it makes it difficult to understand the analyst's intention behind construction of the visualization\n-   Lack of caption makes it hard to know about the source of the data.\n\n#### **2.2.2 Aesthetics**\n\n-   The colour of dots for Strata matches closely with the background theme. This makes it slightly difficult to separate out.\n-   The x axis labels are at 90 degrees to the usual view. This makes it uncomfortable for the reader to read the x-axis labels.\n-   Y-axis gridlines make it easy to read the numbers.\n-   The Type of Area has been placed at the top of the graph(in turn replacing the title). This is slightly misleading for the reader.\n-   A lighter colour could have been chosen for the background. This would have made the visualization stand out more clearly.\n\n## 3. Makeover Design\n\nThe intention behind the makover is to give a more detailed version of distribution of private property prices(based on property types) with area. This makeover adds in the distribution as well. This is because just the median prices won't give the reader a complete view of the property prices. Also to derive any conclusion from the visualization, it is necessary to know the distribution of data.\n\n::: panel-tabset\n## The plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=1056}\n:::\n:::\n\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustom_palette <- c(\"orange\", \"steelblue\")\np <- ggplot(df.c_median, aes(x = `Property Type`, \n             y = `Median Transaction Price ($)`, \n             fill = `Type of Area`)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha = 0.9) +\n  theme(axis.text.x = element_text(size = 9),\n        axis.text.y = element_text(size = 9),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        plot.title = element_text(size = 25, face = \"bold\"),\n        plot.title = element_text(size = 18)) +\n scale_fill_manual(values = custom_palette) +\n  labs(color = \"Type of Area\", title = \"Sale Prices of Private Property types with Type of Area\",\n       subtitle = \"Higher prices for Properties on Land as compared to Strata\") + \n  scale_x_discrete(drop = FALSE)\n\ndf_terracehouse <- df.c %>% filter(`Property Type` == 'Terrace House')\np1 <- ggplot(df_terracehouse, \n             aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`)) + stat_halfeye(aes(justification = ifelse(`Type of Area` == \"Land\", 1.2, 0),\n               side = ifelse(`Type of Area` == \"Land\", \"left\", \"right\")),\n               adjust = 8,\n               .width = 0,\n               point_colour = NA, alpha = 0.9) +\n  labs(x = \"Terrace Houses\",caption = \"Source: REALIS, URA\") + scale_fill_manual(values = custom_palette) +\n  ylim(0, 15000000) +\n  geom_boxplot(aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .2, \n               colour = \"black\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    plot.background=element_rect(fill=\"white\",colour=\"white\"))\n\ndf_semidetached <- df.c %>% filter(`Property Type` == 'Semi-Detached House')\n\np2 <- ggplot(df_semidetached, \n             aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`)) + stat_halfeye(aes(justification = ifelse(`Type of Area` == \"Land\", 1.2, 0),\n               side = ifelse(`Type of Area` == \"Land\", \"left\", \"right\")),\n               adjust = 8,\n               .width = 0,\n               point_colour = NA, alpha = 0.9) +\n  labs(x = \"Semi-Detached Houses\") + scale_fill_manual(values = custom_palette) +\n  ylim(0, 15000000) + geom_boxplot(aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .2, \n               colour = \"black\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"white\",colour=\"white\"))\n  \ndf_execcondo <- df.c %>% filter(`Property Type` == 'Executive Condominium')\n\np3 <- ggplot(df_execcondo, \n             aes(x= `Type of Area`, y = `Transacted Price ($)`,fill = `Type of Area`)) + stat_halfeye(aes(justification = ifelse(`Type of Area` == \"Land\", 1.2, 0),\n               side = ifelse(`Type of Area` == \"Land\", \"left\", \"right\")),\n               adjust = 8,\n               .width = 0,\n               point_colour = NA, alpha = 0.9) +\n  labs(x = \"Executive Condominium\") + scale_fill_manual(values = \"steelblue\") +\n  ylim(0, 15000000) + geom_boxplot(aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .2, \n               colour = \"black\") +\n  scale_x_discrete(drop = FALSE) +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"white\",colour=\"white\"))\n  \n  \ndf_detachedhouse <- df.c %>% filter(`Property Type` == 'Detached House')\n\np4 <- ggplot(df_detachedhouse, \n             aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`)) + stat_halfeye(aes(justification = ifelse(`Type of Area` == \"Land\", 1.2, 0),\n               side = ifelse(`Type of Area` == \"Land\", \"left\", \"right\")),\n               adjust = 8,\n               .width = 0,\n               point_colour = NA, alpha = 0.9) +\n  labs(x = \"Detached house\") + scale_fill_manual(values = custom_palette) +\n  ylim(0, 15000000) + geom_boxplot(aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .2, \n               colour = \"black\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"white\",colour=\"white\"))\n\ndf_condo <- df.c %>% filter(`Property Type` == 'Condominium')\n\np5 <- ggplot(df_condo, \n             aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`)) + stat_halfeye(aes(justification = ifelse(`Type of Area` == \"Land\", 1.2, 0),\n               side = ifelse(`Type of Area` == \"Land\", \"left\", \"right\")),\n               adjust = 8,\n               .width = 0,\n               point_colour = NA, alpha = 0.9) +\n  labs(x = \"Condominium\") + scale_fill_manual(values = \"steelblue\") +\n  ylim(0, 15000000) + geom_boxplot(aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .2, \n               colour = \"black\") + \n  scale_x_discrete(drop = FALSE) +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"white\",colour=\"white\"))\n\ndf_apartment <- df.c %>% filter(`Property Type` == 'Apartment')\n\np6 <- ggplot(df_apartment, \n             aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`)) + stat_halfeye(aes(justification = ifelse(`Type of Area` == \"Land\", 1.2, 0),\n               side = ifelse(`Type of Area` == \"Land\", \"left\", \"right\")),\n               adjust = 8,\n               .width = 0,\n               point_colour = NA, alpha = 0.9) +\n  labs(x = \"Apartment\") + scale_fill_manual(values = custom_palette) +\n  ylim(0, 15000000) + geom_boxplot(aes(x= `Type of Area`, y = `Transacted Price ($)`, fill = `Type of Area`),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .2, \n               colour = \"black\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_text(size = rel(1.2)),\n    axis.text.y = element_text(size = rel(0.9)),\n    \n    plot.background=element_rect(fill=\"white\",colour=\"white\"))\n\np7 <- p / (p6 |  p5 | p4 | p3 | p2 | p1)\np7\n```\n:::\n\n:::\n\n::: callout-tip\n## Observations from the  Makeover Visualization\n\n-   In general, the prices of properties on Land are higher than those on Strata for the same property type.\n\n-   The differences between median sale prices of Terrace houses and Semi-detached houses is slightly lower than Apartments and Detached houses.\n\n-   The detached houses and semi-detached houses have a higher variation in sale prices for Land Properties as compared to the Apartments and Terrace houses.\n\n-   The median sale prices for Condos and Executive Condos are lower than the others.\n:::\n\n## 4. Learning Points\n\nThis take-home exercise adds a dimension of critique and makeover of peer works which helps to embed best practices in data visualization. The key takeaways are:\n\n-   It is very important to pay attention to detail while critiquing a visualization. Aspects like the title, subtitle, captions, axes labels, legends, colour schemes play a very important role in getting an understanding of the visualiziation.\n\n-   Trying to understand the intention of the analyst behind constructing the visualization is of prime importance. As a reader, if the intention behind plotting the visualization is not understood then the reading and understanding of the visualization is incomplete.\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}