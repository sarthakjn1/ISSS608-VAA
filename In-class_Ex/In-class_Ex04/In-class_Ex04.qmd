---
title: "In-class Exercise 4"
author: "Sarthak Nagapurkar"
date: "May 04, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

```{r}
pacman::p_load(tidyverse, ggstatsplot)
```

```{r}
exam <- read_csv("data/Exam_data.csv")
```

```{r}
#set.seed(1234)

p <- gghistostats(
  data = exam,
  x = ENGLISH,
  type = "parametric",
  test.value = 60,
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7),
  normal.curve = FALSE,
  normal.curve.args = list(linewidth = 2),
  xlab = "English Scores"
)
p
```

```{r}
extract_stats(p)
```

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "np",
  test.value = 60,
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7),
  normal.curve = FALSE,
  normal.curve.args = list(linewidth = 2),
  xlab = "English Scores"
)
```

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "robust",
  test.value = 60,
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7),
  normal.curve = FALSE,
  normal.curve.args = list(linewidth = 2),
  xlab = "English Scores"
)
```

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7),
  normal.curve = FALSE,
  normal.curve.args = list(linewidth = 2),
  xlab = "English Scores"
)
```

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "robust",
  test.value = 60,
  bin.args = list(color = "black",
                  fill = "grey50",
                  alpha = 0.7),
  normal.curve = TRUE,
  normal.curve.args = list(linewidth = 0.5),
  xlab = "English Scores"
)
```

```{r}
ggdotplotstats(
  data = exam,
  x = ENGLISH,
  y = CLASS
)
```

```{r}
exam_long <- exam %>%
  pivot_longer(
    cols= ENGLISH:SCIENCE,
    names_to = "SUBJECT",
    values_to = "SCORES") %>%
  filter(CLASS == "3A")
```

```{r}
ggwithinstats(
  data = filter(exam_long,
                SUBJECT %in%
                  c("MATHS", "SCIENCE")),
  x = SUBJECT,
  y = SCORES,
  type = "p"
)
```

```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH,
  marginal = TRUE,
  label.var = ID,
  label.expression = ENGLISH > 90 & MATHS > 90
)
```
